# use/modify this conf file to run bdtTreeMaker.py or a similar script over the batch system over a large number of LDMX recon files
[signals]
# comma separated list of all the signal mass points you want to run over (units are GeV)
# if you only want to run on background and not signal, set this to masspoints: None
masspoints: 1.0, 0.1, 0.01, 0.001

[config]
# if signal samples are in different directories, signal_dir should have list of source directories in the same order as given for mass points above | spereated by commas|
# if they are all in the same directory, no need to provide a list, just provide the location of that directory
signal_dir = /nfs/slac/g/ldmx/data/mc/v5/signal_pmax_2pt0_gev/1000mev,/nfs/slac/g/ldmx/data/mc/v5/signal_pmax_2pt0_gev/100mev,/nfs/slac/g/ldmx/data/mc/v5/signal_pmax_2pt0_gev/10mev,/nfs/slac/g/ldmx/data/mc/v5/signal_pmax_2pt0_gev/1mev
# if you want to run over background files located in multiple directories, list all the directories below (separated by commas)
# if you only want to run on signal and not background, set background_dir = dummy
background_dir = /nfs/slac/g/ldmx/data/mc/v5/4pt0_gev_e_ecal_pn_bdt_train_kf
signal_suffix = .root
background_suffix = .root
background_prefix = None
signal_prefix = None 
#SIG #LDMX_W_UndecayedAP.4.0GeV.W.pMax.2.0.mA.
# modify locations of script and output/job script directories as needed
#run_script = /nfs/slac/g/ldmx/users/mkilpatr/ldmx-sw/scripts/mipTracking/bdtTreeMakerNewVars.py
run_script = /nfs/slac/g/ldmx/users/mkilpatr/ldmx-sw/LDMX-scripts/mipTracking/hits/simbkg_parent.py
# location to which output trees will be written out
output_dir = /nfs/slac/g/ldmx/users/mkilpatr/ldmx-sw/LDMX-scripts/mipTracking/hits/hits_copy_trees
# location to which individual job scipts will be written out
job_dir = /nfs/slac/g/ldmx/users/mkilpatr/ldmx-sw/LDMX-scripts/mipTracking/hits/hits_copy_txts
# label to add to output tree name
output_label = tree
# input files per job
files_per_job = 10
# rough estimate of job length in minutes ... determines which queue (e.g. medium) the jobs will be submitted to (doesn't have to be super accurate)
queue_time = 1000
# shell script to be sourced to submit jobs
submit_file = submitHitsSimBkg_parent.sh
